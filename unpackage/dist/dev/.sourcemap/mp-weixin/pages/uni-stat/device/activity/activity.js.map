{"version":3,"sources":["uni-app:///main.js","webpack:///D:/桌面/onlineEducation1_admin/pages/uni-stat/device/activity/activity.vue?418a","webpack:///D:/桌面/onlineEducation1_admin/pages/uni-stat/device/activity/activity.vue?402b","webpack:///D:/桌面/onlineEducation1_admin/pages/uni-stat/device/activity/activity.vue?147e","webpack:///D:/桌面/onlineEducation1_admin/pages/uni-stat/device/activity/activity.vue?1f17","uni-app:///pages/uni-stat/device/activity/activity.vue"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","data","tableName","fieldsMap","query","dimension","appid","platform_id","uni_platform","version_id","channel_id","start_time","options","pageSize","pageCurrent","total","loading","currentDateTab","currentChartTab","tableData","chartData","channelData","tabName","errorMessage","computed","chartTabs","_id","name","tabs","tab","channelQuery","versionQuery","created","watch","deep","handler","methods","useDatetimePicker","changeAppid","changePlatform","changeTimeRange","start","end","changePageCurrent","changePageSize","changeChartTab","getAllData","getChartData","categories","series","db","where","field","groupBy","groupField","orderBy","get","getCount","then","res","count","console","getTabelData","skip","limit","daysCount","weeks","months","allData","getRangeCountData","mapWithWeekAndMonth","item","getWeekNumber","d","getChannelData","condition","getTemp","channelName","channels","value","text","catch"],"mappings":";;;;;;;;;;;;;AAAA;AAE2D;AAC3D;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,iBAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAqH;AACrH;AAC4D;AACL;;;AAGvD;AACyK;AACzK,gBAAgB,6KAAU;AAC1B,EAAE,8EAAM;AACR,EAAE,mFAAM;AACR,EAAE,4FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,uFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa,gTAEN;AACP,KAAK;AACL;AACA,aAAa,sTAEN;AACP,KAAK;AACL;AACA,aAAa,sNAEN;AACP,KAAK;AACL;AACA,aAAa,gZAEN;AACP,KAAK;AACL;AACA,aAAa,sXAEN;AACP,KAAK;AACL;AACA,aAAa,6NAEN;AACP,KAAK;AACL;AACA,aAAa,mWAEN;AACP,KAAK;AACL;AACA,aAAa,oMAEN;AACP,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAmoB,CAAgB,knBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;ACiDvpB;AAYA;AAAA;AAAA;AAAA;AAAA,eACA;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAC;QAAA;QACAC;MACA;;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;QACAC;QACAC;MACA;QACAD;QACAC;MACA;QACAD;QACAC;MACA;MACA;QACAC;UACA;YACAC;UACA;YACAA;UACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;QACAvB;MACA;IACA;IACAwB;MACA,kBAGA;QAFAzB;QACAE;MAEA;QACAF;QACAE;MACA;MACA;IACA;EACA;EACAwB;IAAA;IACA;MACA;IACA;IACA;EACA;EACAC;IACA7B;MACA8B;MACAC;QACA;QACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACAC;MACA;QACAC;MACA;QACAA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;QACA;QACA;MACA;;MACA;MACA;MACA;IACA;IAEAC;MAAA;MAAA;MAAA;MACA;MACA;QACAC;QACAC;UACAtB;UACA1B;QACA;MACA;MACAG;MACA;MACA;QACA8C,8BACAC,aACAC,uFACAC,sBACAC,sEACAC,6BACAC;UACAC;QACA,GACAC;UACA,kBAGAC;YAFAC;YACA3D;UAEA;UAAA,2CACAA;YAAA;UAAA;YAAA;cAAA;cACA;cACA;cACAW;cACAA;YACA;UAAA;YAAA;UAAA;YAAA;UAAA;UACA;QACA;UACAiD;QACA;MACA;QACA;QACA;UACA;UACA;UACA,mBAGAF;YAFAC;YACA3D;UAEA;UACA;UAAA,4CACAA;YAAA;UAAA;YAAA;cAAA;cACA;cACA;cACA;cACA;gBACAW;gBACAA;cACA;YACA;UAAA;YAAA;UAAA;YAAA;UAAA;UACA;QACA;MACA;IACA;IAEAkD;MAAA;MAAA;MACA,IACAhD,cACA,aADAA;MAEA;MACA;MACA;MACAoC,8BACAC,aACAC,uFACAC,sBACAC,sEACAC,8BACAQ,gDACAC,6BACAR;QACAC;MACA,GACAC;QACA,mBAGAC;UAFAC;UACA3D;QAEA;UACAgE;UACAC;UACAC;QACA;QACA;QACA;QACA/D;QACA;UACA,mBAGAuD;YAFAC;YACA3D;UAEAiE;UACA;UACA;UACA9D;UACA;YACA,mBAGAuD;cAFAC;cACA3D;YAEAkE;YAEA;YAAA,4CAEAC;cAAA;YAAA;cAAA;gBAAA;gBACA;cACA;YAAA;cAAA;YAAA;cAAA;YAAA;YACA;YACA;YACA;UACA;YACA;UACA;QACA;MACA;QACAP;QACA;QACA;MACA;IACA;IAEAQ;MAAA;MACA;MACA,IACAvD,cACA,aADAA;MAEA;MACA,qCACAqC,aACAC,gBACAA,4KACA,CACAC,+BACAC,0EACAC,2CACAC;QACAC;MACA;IACA;IAEA;IACAa;MAAA;MAAA,4CACArE;QAAA;MAAA;QAAA;UAAA;UACA;UACA;UACA;UACA;UAAA,4CACAiE;YAAA;UAAA;YAAA;cAAA;cACA;gBACAK;cACA;YACA;UAAA;YAAA;UAAA;YAAA;UAAA;UAAA,4CACAJ;YAAA;UAAA;YAAA;cAAA;cACA;gBACAI;cACA;YACA;UAAA;YAAA;UAAA;YAAA;UAAA;QACA;MAAA;QAAA;MAAA;QAAA;MAAA;MACA;IACA;IAEA;IACAC;MACA;MACAC;MACA;MACA;MACAA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;MACA;MACA;MACApE;MACA;QACAqE;MACA;MACA;MACApE;MACA;QACAoE;MACA;MAEA,2DACAvB,mBACAwB;MAEA,yDACAzB,iBACAC,qDACAwB;MAEA1B,yCACAK,8BACAC,MACAE;QACA;QACA;QACA;UACA;UACA;YACAmB;YACA;cACAA;YACA;YACAC;cACAC;cACAC;YACA;UACA;QACA;QACA;MACA,GACAC;QACApB;QACA;QACA;MACA;IAEA;EAEA;AAEA;AAAA,2B","file":"pages/uni-stat/device/activity/activity.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;import '@dcloudio/vue-cli-plugin-uni/packages/uni-cloud/dist/index.js';\nimport Vue from 'vue'\nimport Page from './pages/uni-stat/device/activity/activity.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./activity.vue?vue&type=template&id=356f66ab&\"\nvar renderjs\nimport script from \"./activity.vue?vue&type=script&lang=js&\"\nexport * from \"./activity.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/uni-stat/device/activity/activity.vue\"\nexport default component.exports","export * from \"-!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./activity.vue?vue&type=template&id=356f66ab&\"","var components\ntry {\n  components = {\n    uniStatBreadcrumb: function () {\n      return import(\n        /* webpackChunkName: \"components/uni-stat-breadcrumb/uni-stat-breadcrumb\" */ \"@/components/uni-stat-breadcrumb/uni-stat-breadcrumb.vue\"\n      )\n    },\n    uniDataSelect: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-data-select/components/uni-data-select/uni-data-select\" */ \"@/uni_modules/uni-data-select/components/uni-data-select/uni-data-select.vue\"\n      )\n    },\n    uniStatTabs: function () {\n      return import(\n        /* webpackChunkName: \"components/uni-stat-tabs/uni-stat-tabs\" */ \"@/components/uni-stat-tabs/uni-stat-tabs.vue\"\n      )\n    },\n    uniDatetimePicker: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-datetime-picker/components/uni-datetime-picker/uni-datetime-picker\" */ \"@/uni_modules/uni-datetime-picker/components/uni-datetime-picker/uni-datetime-picker.vue\"\n      )\n    },\n    qiunDataCharts: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/qiun-data-charts/components/qiun-data-charts/qiun-data-charts\" */ \"@/uni_modules/qiun-data-charts/components/qiun-data-charts/qiun-data-charts.vue\"\n      )\n    },\n    uniStatTable: function () {\n      return import(\n        /* webpackChunkName: \"components/uni-stat-table/uni-stat-table\" */ \"@/components/uni-stat-table/uni-stat-table.vue\"\n      )\n    },\n    uniPagination: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-pagination/components/uni-pagination/uni-pagination\" */ \"@/uni_modules/uni-pagination/components/uni-pagination/uni-pagination.vue\"\n      )\n    },\n    fixWindow: function () {\n      return import(\n        /* webpackChunkName: \"components/fix-window/fix-window\" */ \"@/components/fix-window/fix-window.vue\"\n      )\n    },\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var g0 = _vm.currentDateTab < 0 && !!_vm.query.start_time.length\n  var g1 = new Date().getTime()\n  var g2 = _vm.query.platform_id && _vm.query.platform_id.indexOf(\"==\") === -1\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        g0: g0,\n        g1: g1,\n        g2: g2,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./activity.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./activity.vue?vue&type=script&lang=js&\"","<template>\n\t<!-- 对应页面：设备统计-活跃度  -->\r\n\t<view class=\"fix-top-window\">\r\n\t\t<view class=\"uni-header\">\r\n\t\t\t<uni-stat-breadcrumb class=\"uni-stat-breadcrumb-on-phone\" />\r\n\t\t\t<view class=\"uni-group\">\r\n\t\t\t\t<view class=\"uni-sub-title hide-on-phone\">用户活跃度分析</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"uni-container\">\r\n\t\t\t<view class=\"uni-stat--x flex p-1015\">\r\n\t\t\t\t<uni-data-select collection=\"opendb-app-list\" field=\"appid as value, name as text\" orderby=\"text asc\" :defItem=\"1\" label=\"应用选择\" @change=\"changeAppid\" v-model=\"query.appid\" :clear=\"false\" />\r\n\t\t\t\t<uni-data-select collection=\"opendb-app-versions\" :where=\"versionQuery\" class=\"ml-m\" field=\"_id as value, version as text, uni_platform as label, create_date as date\" format=\"{label} - {text}\" orderby=\"date desc\" label=\"版本选择\" v-model=\"query.version_id\" />\n\t\t\t</view>\n\t\t\t<view class=\"uni-stat--x flex\">\n\t\t\t\t<uni-stat-tabs label=\"日期选择\" :current=\"currentDateTab\" mode=\"date\" :yesterday=\"false\" @change=\"changeTimeRange\" />\n\t\t\t\t<uni-datetime-picker type=\"daterange\" :end=\"new Date().getTime()\" v-model=\"query.start_time\" returnType=\"timestamp\" :clearIcon=\"false\" class=\"uni-stat-datetime-picker\" :class=\"{'uni-stat__actived': currentDateTab < 0 && !!query.start_time.length}\" @change=\"useDatetimePicker\" />\n\t\t\t</view>\r\n\t\t\t<view class=\"uni-stat--x\">\r\n\t\t\t\t<uni-stat-tabs label=\"平台选择\" type=\"boldLine\" mode=\"platform\" v-model=\"query.platform_id\" @change=\"changePlatform\" />\n\t\t\t\t<uni-data-select ref=\"version-select\" v-if=\"query.platform_id && query.platform_id.indexOf('==') === -1\" collection=\"uni-stat-app-channels\" :where=\"channelQuery\" class=\"p-channel\" field=\"_id as value, channel_name as text\" orderby=\"text asc\" label=\"渠道/场景值选择\" v-model=\"query.channel_id\" />\r\n\t\t\t\t<!-- <uni-data-select v-if=\"query.platform_id && query.platform_id.indexOf('==') === -1\" :localdata=\"channelData\" label=\"渠道/场景值选择\" class=\"p-channel\" v-model=\"query.channel_id\"></uni-data-select> -->\r\n\t\t\t</view>\r\n\t\t\t<view class=\"uni-stat--x p-m\">\r\n\t\t\t\t<view class=\"label-text mb-l\">\r\n\t\t\t\t\t趋势图\r\n\t\t\t\t</view>\r\n\t\t\t\t<uni-stat-tabs type=\"box\" :tabs=\"chartTabs\" class=\"mb-l\" @change=\"changeChartTab\" />\r\n\t\t\t\t<view class=\"uni-charts-box\">\r\n\t\t\t\t\t<qiun-data-charts type=\"area\" :chartData=\"chartData\" echartsH5 echartsApp :errorMessage=\"errorMessage\"/>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"uni-stat--x p-m\">\r\n\t\t\t\t<uni-stat-table :data=\"tableData\" :filedsMap=\"fieldsMap\" :loading=\"loading\" tooltip />\r\n\t\t\t\t<view class=\"uni-pagination-box\">\r\n\t\t\t\t\t<uni-pagination show-icon show-page-size :page-size=\"options.pageSize\"\r\n\t\t\t\t\t\t:current=\"options.pageCurrent\" :total=\"options.total\" @change=\"changePageCurrent\"\r\n\t\t\t\t\t\t@pageSizeChange=\"changePageSize\" />\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- #ifndef H5 -->\r\n\t\t<fix-window />\r\n\t\t<!-- #endif -->\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport {\r\n\t\tmapfields,\r\n\t\tstringifyQuery,\r\n\t\tstringifyField,\r\n\t\tstringifyGroupField,\r\n\t\tgetTimeOfSomeDayAgo,\r\n\t\tdivision,\r\n\t\tformat,\r\n\t\tformatDate,\r\n\t\tmaxDeltaDay,\r\n\t\tdebounce,\r\n\t} from '@/js_sdk/uni-stat/util.js'\r\n\timport fieldsMap from './fieldsMap.js'\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\ttableName: 'uni-stat-result',\r\n\t\t\t\tfieldsMap,\r\n\t\t\t\tquery: {\r\n\t\t\t\t\tdimension: \"day\",\r\n\t\t\t\t\tappid: '',\r\n\t\t\t\t\tplatform_id: '',\r\n\t\t\t\t\tuni_platform: '',\r\n\t\t\t\t\tversion_id: '',\r\n\t\t\t\t\tchannel_id: '',\r\n\t\t\t\t\tstart_time: [],\r\n\t\t\t\t},\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tpageSize: 20,\r\n\t\t\t\t\tpageCurrent: 1, // 当前页\r\n\t\t\t\t\ttotal: 0, // 数据总量\r\n\t\t\t\t},\r\n\t\t\t\tloading: false,\r\n\t\t\t\tcurrentDateTab: 0,\r\n\t\t\t\tcurrentChartTab: 'day',\r\n\t\t\t\ttableData: [],\r\n\t\t\t\tchartData: {},\r\n\t\t\t\tchannelData: [],\r\n\t\t\t\ttabName: '日活',\n\t\t\t\terrorMessage: \"\",\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tchartTabs() {\r\n\t\t\t\tconst tabs = [{\r\n\t\t\t\t\t_id: 'day',\r\n\t\t\t\t\tname: '日活'\r\n\t\t\t\t}, {\r\n\t\t\t\t\t_id: 'week',\r\n\t\t\t\t\tname: '周活'\r\n\t\t\t\t}, {\r\n\t\t\t\t\t_id: 'month',\r\n\t\t\t\t\tname: '月活'\r\n\t\t\t\t}]\r\n\t\t\t\tif (maxDeltaDay(this.query.start_time, 7)) {\r\n\t\t\t\t\ttabs.forEach((tab, index) => {\r\n\t\t\t\t\t\tif (tab._id === 'month') {\r\n\t\t\t\t\t\t\ttab.disabled = true\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttab.disabled = false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\treturn tabs\r\n\t\t\t},\r\n\t\t\tchannelQuery() {\r\n\t\t\t\tconst platform_id = this.query.platform_id\r\n\t\t\t\treturn stringifyQuery({\r\n\t\t\t\t\tplatform_id\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tversionQuery() {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tappid,\r\n\t\t\t\t\tuni_platform\r\n\t\t\t\t} = this.query\r\n\t\t\t\tconst query = stringifyQuery({\r\n\t\t\t\t\tappid,\r\n\t\t\t\t\tuni_platform,\r\n\t\t\t\t})\r\n\t\t\t\treturn query\r\n\t\t\t},\r\n\t\t},\r\n\t\tcreated() {\n\t\t\tthis.debounceGet = debounce(() => {\n\t\t\t\tthis.getAllData(this.query);\n\t\t\t}, 300);\n\t\t\tthis.getChannelData()\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tquery: {\r\n\t\t\t\tdeep: true,\r\n\t\t\t\thandler(val) {\r\n\t\t\t\t\tthis.options.pageCurrent = 1 // 重置分页\r\n\t\t\t\t\tthis.debounceGet()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tuseDatetimePicker() {\r\n\t\t\t\tthis.currentDateTab = -1\r\n\t\t\t},\r\n\t\t\tchangeAppid(id) {\r\n\t\t\t\tthis.getChannelData(id, false)\r\n\t\t\t},\r\n\t\t\tchangePlatform(id, index, name, item) {\r\n\t\t\t\tthis.getChannelData(null, id)\r\n\t\t\t\tthis.query.version_id = 0\r\n\t\t\t\tthis.query.uni_platform = item.code\r\n\t\t\t},\r\n\t\t\tchangeTimeRange(id, index) {\r\n\t\t\t\tthis.currentDateTab = index\r\n\t\t\t\tconst day = 24 * 60 * 60 * 1000\r\n\t\t\t\tlet start, end\r\n\t\t\t\tstart = getTimeOfSomeDayAgo(id)\r\n\t\t\t\tif (!id) {\r\n\t\t\t\t\tend = getTimeOfSomeDayAgo(0) + day - 1\r\n\t\t\t\t} else {\r\n\t\t\t\t\tend = getTimeOfSomeDayAgo(0) - 1\r\n\t\t\t\t}\r\n\t\t\t\tthis.query.start_time = [start, end]\r\n\t\t\t},\r\n\t\t\tchangePageCurrent(e) {\r\n\t\t\t\tthis.options.pageCurrent = e.current\r\n\t\t\t\tthis.getTabelData(this.query)\r\n\t\t\t},\r\n\r\n\t\t\tchangePageSize(pageSize) {\r\n\t\t\t\tthis.options.pageSize = pageSize\r\n\t\t\t\tthis.options.pageCurrent = 1 // 重置分页\r\n\t\t\t\tthis.getTabelData(this.query)\r\n\t\t\t},\r\n\r\n\t\t\tchangeChartTab(type, index, name) {\r\n\t\t\t\tthis.currentChartTab = type\r\n\t\t\t\tthis.tabName = name\r\n\t\t\t\tthis.getChartData(this.query, type, name)\r\n\t\t\t},\r\n\r\n\t\t\tgetAllData(query) {\n\t\t\t\tif (!query.appid) {\n\t\t\t\t\tthis.errorMessage = \"请先选择应用\";\n\t\t\t\t\treturn; // 如果appid为空，则不进行查询\n\t\t\t\t}\n\t\t\t\tthis.errorMessage = \"\";\n\t\t\t\tthis.getChartData(query, this.currentChartTab, this.tabName)\r\n\t\t\t\tthis.getTabelData(query)\r\n\t\t\t},\r\n\r\n\t\t\tgetChartData(query, type, name = '日活', field = 'active_device_count') {\r\n\t\t\t\tthis.chartData = {}\r\n\t\t\t\tconst options = {\r\n\t\t\t\t\tcategories: [],\r\n\t\t\t\t\tseries: [{\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\tdata: []\r\n\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t\tquery = stringifyQuery(query, false, ['uni_platform'])\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tif (type === 'day') {\r\n\t\t\t\t\tdb.collection(this.tableName)\r\n\t\t\t\t\t\t.where(query)\r\n\t\t\t\t\t\t.field(`${stringifyField(fieldsMap, field)}, start_time`)\r\n\t\t\t\t\t\t.groupBy('start_time')\r\n\t\t\t\t\t\t.groupField(stringifyGroupField(fieldsMap, field))\r\n\t\t\t\t\t\t.orderBy('start_time', 'asc')\r\n\t\t\t\t\t\t.get({\r\n\t\t\t\t\t\t\tgetCount: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\t\tcount,\r\n\t\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t\t} = res.result\r\n\t\t\t\t\t\t\tthis.chartData = []\r\n\t\t\t\t\t\t\tfor (const item of data) {\r\n\t\t\t\t\t\t\t\tconst x = formatDate(item.start_time, 'day')\r\n\t\t\t\t\t\t\t\tconst y = item[field]\r\n\t\t\t\t\t\t\t\toptions.series[0].data.push(y)\r\n\t\t\t\t\t\t\t\toptions.categories.push(x)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.chartData = options\r\n\t\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t} else {\n\t\t\t\t\t// 周、月范围的处理\r\n\t\t\t\t\tthis.getRangeCountData(query, type).then(res => {\r\n\t\t\t\t\t\tconst oldType = type\r\n\t\t\t\t\t\tif (type === 'week') type = 'isoWeek'\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tcount,\r\n\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t} = res.result\r\n\t\t\t\t\t\tthis.chartData = []\r\n\t\t\t\t\t\tconst wunWeekTime = 7 * 24 * 60 * 60 * 1000\r\n\t\t\t\t\t\tfor (const item of data) {\r\n\t\t\t\t\t\t\tconst date = +new Date(item.year, 0) + (Number(item[type]) * wunWeekTime - 1)\r\n\t\t\t\t\t\t\tconst x = formatDate(date, oldType)\r\n\t\t\t\t\t\t\tconst y = item[type + '_' + field]\r\n\t\t\t\t\t\t\tif (y) {\r\n\t\t\t\t\t\t\t\toptions.series[0].data.push(y)\r\n\t\t\t\t\t\t\t\toptions.categories.push(x)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.chartData = options\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgetTabelData(queryData, field = 'active_device_count') {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tpageCurrent\r\n\t\t\t\t} = this.options\r\n\t\t\t\tlet query = stringifyQuery(queryData)\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tdb.collection(this.tableName)\r\n\t\t\t\t\t.where(query)\r\n\t\t\t\t\t.field(`${stringifyField(fieldsMap, field)}, start_time`)\r\n\t\t\t\t\t.groupBy('start_time')\r\n\t\t\t\t\t.groupField(stringifyGroupField(fieldsMap, field))\r\n\t\t\t\t\t.orderBy('start_time', 'desc')\r\n\t\t\t\t\t.skip((pageCurrent - 1) * this.options.pageSize)\r\n\t\t\t\t\t.limit(this.options.pageSize)\r\n\t\t\t\t\t.get({\r\n\t\t\t\t\t\tgetCount: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tcount,\r\n\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t} = res.result\r\n\t\t\t\t\t\tlet daysData = data,\r\n\t\t\t\t\t\t\tdaysCount = count,\r\n\t\t\t\t\t\t\tweeks = [],\r\n\t\t\t\t\t\t\tmonths = []\r\n\t\t\t\t\t\t// 获取周活、月活\n\t\t\t\t\t\t// stringifyQuery(queryData)\n\t\t\t\t\t\tlet query = JSON.parse(JSON.stringify(queryData))\n\t\t\t\t\t\tquery.dimension = 'week'\r\n\t\t\t\t\t\tthis.getRangeCountData(stringifyQuery(query), 'week').then(res => {\r\n\t\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\t\tcount,\r\n\t\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t\t} = res.result\r\n\t\t\t\t\t\t\tweeks = data\r\n\t\t\t\t\t\t\t// queryData.dimension = 'month'\n\t\t\t\t\t\t\tlet query = JSON.parse(JSON.stringify(queryData))\n\t\t\t\t\t\t\tquery.dimension = 'month'\r\n\t\t\t\t\t\t\tthis.getRangeCountData(stringifyQuery(query), 'month').then(res => {\r\n\t\t\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\t\t\tcount,\r\n\t\t\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t\t\t} = res.result\r\n\t\t\t\t\t\t\t\tmonths = data\r\n\r\n\t\t\t\t\t\t\t\tconst allData = this.mapWithWeekAndMonth(daysData, weeks, months)\r\n\r\n\t\t\t\t\t\t\t\tfor (const item of allData) {\r\n\t\t\t\t\t\t\t\t\tmapfields(fieldsMap, item, item)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.tableData = []\r\n\t\t\t\t\t\t\t\tthis.options.total = daysCount\r\n\t\t\t\t\t\t\t\tthis.tableData = allData\r\n\t\t\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\t\t\tthis.loading = false\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t\t// err.message 错误信息\r\n\t\t\t\t\t\t// err.code 错误码\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\tgetRangeCountData(query, type, field = 'active_device_count') {\r\n\t\t\t\tif (type === 'week') type = 'isoWeek'\r\n\t\t\t\tconst {\r\n\t\t\t\t\tpageCurrent\r\n\t\t\t\t} = this.options\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\treturn db.collection(this.tableName)\r\n\t\t\t\t\t.where(query)\r\n\t\t\t\t\t.field(\r\n\t\t\t\t\t\t`${field}, start_time, ${type}(add(new Date(0),start_time), \"Asia/Shanghai\") as ${type},year(add(new Date(0),start_time), \"Asia/Shanghai\") as year`\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.groupBy(`year, ${type}`)\r\n\t\t\t\t\t.groupField(`sum(${field}) as ${type}_${field}`)\r\n\t\t\t\t\t.orderBy(`year asc, ${type} asc`)\r\n\t\t\t\t\t.get({\r\n\t\t\t\t\t\tgetCount: true\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\t// 匹配数据日期所在的周活、月活\r\n\t\t\tmapWithWeekAndMonth(data, weeks, months, field = 'active_device_count') {\r\n\t\t\t\tfor (const item of data) {\r\n\t\t\t\t\tconst date = new Date(item.start_time)\r\n\t\t\t\t\tconst year = date.getUTCFullYear()\r\n\t\t\t\t\tconst month = date.getMonth() + 1\r\n\t\t\t\t\tconst week = this.getWeekNumber(date)\r\n\t\t\t\t\tfor (const w of weeks) {\r\n\t\t\t\t\t\tif (w.isoWeek === week && w.year === year) {\r\n\t\t\t\t\t\t\titem[`week_${field}`] = w[`isoWeek_${field}`]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (const m of months) {\r\n\t\t\t\t\t\tif (m.month === month && m.year === year) {\r\n\t\t\t\t\t\t\titem[`month_${field}`] = m[`month_${field}`]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn data\r\n\t\t\t},\r\n\n\t\t\t//日期所在的周（一年中的第几周）\r\n\t\t\tgetWeekNumber(d) {\r\n\t\t\t\t// Copy date so don't modify original\r\n\t\t\t\td = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\r\n\t\t\t\t// Set to nearest Thursday: current date + 4 - current day number\r\n\t\t\t\t// Make Sunday's day number 7\r\n\t\t\t\td.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\r\n\t\t\t\t// Get first day of year\r\n\t\t\t\tvar yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n\t\t\t\t// Calculate full weeks to nearest Thursday\r\n\t\t\t\tvar weekNo = Math.ceil((((d - yearStart) / 86400000) + 1) / 7);\r\n\t\t\t\t// Return array of year and week number\r\n\t\t\t\treturn weekNo;\r\n\t\t\t},\r\n\t\t\t//获取渠道信息\r\n\t\t\tgetChannelData(appid, platform_id) {\r\n\t\t\t\tthis.query.channel_id = ''\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tconst condition = {}\r\n\t\t\t\t//对应应用\r\n\t\t\t\tappid = appid ? appid : this.query.appid\r\n\t\t\t\tif (appid) {\r\n\t\t\t\t\tcondition.appid = appid\r\n\t\t\t\t}\r\n\t\t\t\t//对应平台\r\n\t\t\t\tplatform_id = platform_id ? platform_id : this.query.platform_id\r\n\t\t\t\tif (platform_id) {\r\n\t\t\t\t\tcondition.platform_id = platform_id\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet platformTemp = db.collection('uni-stat-app-platforms')\r\n\t\t\t\t\t.field('_id, name')\r\n\t\t\t\t\t.getTemp()\r\n\r\n\t\t\t\tlet channelTemp = db.collection('uni-stat-app-channels')\r\n\t\t\t\t\t.where(condition)\r\n\t\t\t\t\t.field('_id, channel_name, create_time, platform_id')\r\n\t\t\t\t\t.getTemp()\r\n\r\n\t\t\t\tdb.collection(channelTemp, platformTemp)\r\n\t\t\t\t\t.orderBy('platform_id', 'asc')\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tlet data = res.result.data\r\n\t\t\t\t\t\tlet channels = []\r\n\t\t\t\t\t\tif (data.length > 0) {\r\n\t\t\t\t\t\t\tlet channelName\r\n\t\t\t\t\t\t\tfor (let i in data) {\r\n\t\t\t\t\t\t\t\tchannelName = data[i].channel_name ? data[i].channel_name : '默认'\r\n\t\t\t\t\t\t\t\tif (data[i].platform_id.length > 0) {\r\n\t\t\t\t\t\t\t\t\tchannelName = data[i].platform_id[0].name + '-' + channelName\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tchannels.push({\r\n\t\t\t\t\t\t\t\t\tvalue: data[i]._id,\r\n\t\t\t\t\t\t\t\t\ttext: channelName\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.channelData = channels\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t\t// err.message 错误信息\r\n\t\t\t\t\t\t// err.code 错误码\r\n\t\t\t\t\t}).finally(() => {})\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\n"],"sourceRoot":""}